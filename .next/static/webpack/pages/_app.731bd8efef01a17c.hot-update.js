"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/redux/dark.ts":
/*!***************************!*\
  !*** ./src/redux/dark.ts ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"darkSlice\": function() { return /* binding */ darkSlice; },\n/* harmony export */   \"selectDarkState\": function() { return /* binding */ selectDarkState; },\n/* harmony export */   \"setDarkState\": function() { return /* binding */ setDarkState; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @reduxjs/toolkit */ \"./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js\");\n/* harmony import */ var next_redux_wrapper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-redux-wrapper */ \"./node_modules/next-redux-wrapper/es6/index.js\");\n\n\nconst initialState = {\n    dark: false\n};\nconst darkSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createSlice)({\n    name: \"dark\",\n    initialState,\n    reducers: {\n        setDarkState (state, action) {\n            state.dark = action.payload;\n        },\n        extraReducers: {\n            [next_redux_wrapper__WEBPACK_IMPORTED_MODULE_0__.HYDRATE]: (state, param)=>{\n                let { payload  } = param;\n                /* istanbul ignore next */ return {\n                    ...state,\n                    ...payload.dark\n                };\n            }\n        }\n    }\n});\nconst setDarkState = (val)=>darkSlice.actions.setDarkState(val);\nconst selectDarkState = (state)=>state.dark.dark;\n/* harmony default export */ __webpack_exports__[\"default\"] = (darkSlice.reducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVkdXgvZGFyay50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUErQztBQUVGO0FBRTdDLE1BQU1FLGVBQWU7SUFDbkJDLE1BQU0sS0FBSztBQUNiO0FBS08sTUFBTUMsWUFBWUosNkRBQVdBLENBQUM7SUFDbkNLLE1BQU07SUFDTkg7SUFDQUksVUFBVTtRQUNSQyxjQUFhQyxLQUFLLEVBQUVDLE1BQU0sRUFBRTtZQUMxQkQsTUFBTUwsSUFBSSxHQUFHTSxPQUFPQyxPQUFPO1FBQzdCO1FBQ0FDLGVBQWU7WUFDYixDQUFDVix1REFBT0EsQ0FBQyxFQUFFLENBQUNPLGVBQWlDO29CQUFyQixFQUFFRSxRQUFPLEVBQU87Z0JBQ3RDLHdCQUF3QixHQUN4QixPQUFPO29CQUNMLEdBQUdGLEtBQUs7b0JBQ1IsR0FBR0UsUUFBUVAsSUFBSTtnQkFDakI7WUFDRjtRQUNGO0lBQ0Y7QUFDRixHQUFHO0FBRUksTUFBTUksZUFBZSxDQUFDSyxNQUMzQlIsVUFBVVMsT0FBTyxDQUFDTixZQUFZLENBQUNLLEtBQUs7QUFFL0IsTUFBTUUsa0JBQWtCLENBQUNOLFFBQzlCQSxNQUFNTCxJQUFJLENBQUNBLElBQUksQ0FBQztBQUVsQiwrREFBZUMsVUFBVVcsT0FBTyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9yZWR1eC9kYXJrLnRzP2NjMmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlU2xpY2UgfSBmcm9tIFwiQHJlZHV4anMvdG9vbGtpdFwiO1xuXG5pbXBvcnQgeyBIWURSQVRFIH0gZnJvbSBcIm5leHQtcmVkdXgtd3JhcHBlclwiO1xuXG5jb25zdCBpbml0aWFsU3RhdGUgPSB7XG4gIGRhcms6IGZhbHNlLFxufTtcblxuaW50ZXJmYWNlIElCYW5uZXJDb250ZW50IHtcbiAgZGFyazogYm9vbGVhbjtcbn1cbmV4cG9ydCBjb25zdCBkYXJrU2xpY2UgPSBjcmVhdGVTbGljZSh7XG4gIG5hbWU6IFwiZGFya1wiLFxuICBpbml0aWFsU3RhdGUsXG4gIHJlZHVjZXJzOiB7XG4gICAgc2V0RGFya1N0YXRlKHN0YXRlLCBhY3Rpb24pIHtcbiAgICAgIHN0YXRlLmRhcmsgPSBhY3Rpb24ucGF5bG9hZDtcbiAgICB9LFxuICAgIGV4dHJhUmVkdWNlcnM6IHtcbiAgICAgIFtIWURSQVRFXTogKHN0YXRlOiBhbnksIHsgcGF5bG9hZCB9OiBhbnkpID0+IHtcbiAgICAgICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICAuLi5wYXlsb2FkLmRhcmssXG4gICAgICAgIH07XG4gICAgICB9LFxuICAgIH0sXG4gIH0sXG59KTtcblxuZXhwb3J0IGNvbnN0IHNldERhcmtTdGF0ZSA9ICh2YWw6IEJvb2xlYW4pID0+XG4gIGRhcmtTbGljZS5hY3Rpb25zLnNldERhcmtTdGF0ZSh2YWwpO1xuXG5leHBvcnQgY29uc3Qgc2VsZWN0RGFya1N0YXRlID0gKHN0YXRlOiB7IGRhcms6IElCYW5uZXJDb250ZW50IH0pID0+XG4gIHN0YXRlLmRhcmsuZGFyaztcblxuZXhwb3J0IGRlZmF1bHQgZGFya1NsaWNlLnJlZHVjZXI7XG4iXSwibmFtZXMiOlsiY3JlYXRlU2xpY2UiLCJIWURSQVRFIiwiaW5pdGlhbFN0YXRlIiwiZGFyayIsImRhcmtTbGljZSIsIm5hbWUiLCJyZWR1Y2VycyIsInNldERhcmtTdGF0ZSIsInN0YXRlIiwiYWN0aW9uIiwicGF5bG9hZCIsImV4dHJhUmVkdWNlcnMiLCJ2YWwiLCJhY3Rpb25zIiwic2VsZWN0RGFya1N0YXRlIiwicmVkdWNlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/redux/dark.ts\n"));

/***/ })

});